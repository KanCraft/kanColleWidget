#!/bin/sh

print_help()
{
  echo "\ttest\tテスト用ビルド"
  echo "\tstg\tステージングビルド"
  echo "\tprod\tプロダクションビルド"
  echo "\tall\tぜんぶ"
  echo "\tなし\tぜんぶ"
  echo "\n\thelp\tこれです"
  exit 0
}

build_prod(){
  rm -rf build/kanColleWidget
  mkdir -p build/kanColleWidget
  cp -r src build/kanColleWidget/
  cp chrome_ex_oauth.html build/kanColleWidget
  mv build/kanColleWidget/src/img/icon* build/kanColleWidget/
  cp manifest/prod.json build/kanColleWidget/manifest.json
  zip -r build/kanColleWidget.zip build/kanColleWidget/*
}

build_stg(){
  rm -rf build/stg.kanColleWidget
  mkdir -p build/stg.kanColleWidget
  cp -r src build/stg.kanColleWidget/
  cp chrome_ex_oauth.html build/stg.kanColleWidget
  mv build/stg.kanColleWidget/src/img/icon* build/stg.kanColleWidget/
  cp manifest/prod.json build/stg.kanColleWidget/manifest.json
  sed -e 's/艦これウィジェット/stg.艦これウィジェット/' -i.bak build/stg.kanColleWidget/manifest.json
  zip -r build/stg.kanColleWidget.zip build/stg.kanColleWidget/*
}

build_beta(){
  rm -rf build/beta.kanColleWidget
  mkdir -p build/beta.kanColleWidget
  cp -r src build/beta.kanColleWidget/
  cp chrome_ex_oauth.html build/beta.kanColleWidget
  mv build/beta.kanColleWidget/src/img/icon* build/beta.kanColleWidget/
  cp manifest/prod.json build/beta.kanColleWidget/manifest.json
  cp manifest/icons/beta/* build/beta.kanColleWidget/
  sed -e 's/艦これウィジェット/beta.艦これウィジェット/' -i.bak build/beta.kanColleWidget/manifest.json
  zip -r build/beta.kanColleWidget.zip build/beta.kanColleWidget/*
}

build_test(){
  cp -rf src test/
}

build_all(){
  build_prod
  build_stg
  build_beta
  build_test
}

show_manifest_diff(){
  echo "\n各パッケージとのmanifestのdiffを表示"
  echo "prod <==> stg"
  diff build/kanColleWidget/manifest.json build/stg.kanColleWidget/manifest.json
  # echo "\nprod <==> test"
  # diff build/kanColleWidget/manifest.json build/test.kanColleWidget/manifest.json
}
get_ver_in_test(){
  echo `grep version test/manifest.json | grep -v manifest_version | tr -d " " | sed s/\"version\":\"//`
}
get_ver_in_manifest(){
  echo `grep version manifest/prod.json | grep -v manifest_version | tr -d " " | sed s/\"version\":\"//`
  # echo `grep version manifest/test.json | grep -v manifest_version | tr -d " "`
}
get_ver_in_constants(){
  echo `grep version src/js/Constants.js | sed -E "s/version:\ \"v([^\]+)\"/\1/g"`
}
get_ver_in_README(){
  echo `grep version RELEASENOTES.md | sed -E "s/.*v(.*)<!--version-->$/\1/g"`
}
version_check(){
  echo "\nバージョン情報のチェック"
  echo "manifest.json\t"`get_ver_in_manifest`
  echo "Constants.js\t"`get_ver_in_constants`
  echo "RELEASENOTES\t"`get_ver_in_README`
  echo "\nTEST\t\t"`get_ver_in_test`
}

if [ $# -lt 1 ]; then
  build_all >> /dev/null
  show_manifest_diff
  version_check
fi

case $1 in
  "prod" )
    build_prod
    break;;
  "stg" )
    build_stg
    break;;
  "test" )
    build_test
    break;;
  "all" )
    build_prod
    build_stg
    build_beta
    build_test
    show_manifest_diff
    version_check
    break;;
  "help" )
    print_help
    break;;
  * )
esac
