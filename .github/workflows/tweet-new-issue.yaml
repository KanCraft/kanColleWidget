name: Tweet New Issue

on:
  issues:
    types: [opened]

jobs:
  tweet_new_issue:
    runs-on: ubuntu-latest
    env:
      X_BOT_API_KEY:             ${{ secrets.X_BOT_API_KEY }}
      X_BOT_API_KEY_SECRET:      ${{ secrets.X_BOT_API_KEY_SECRET }}
      X_BOT_ACCESS_TOKEN:        ${{ secrets.X_BOT_ACCESS_TOKEN }}
      X_BOT_ACCESS_TOKEN_SECRET: ${{ secrets.X_BOT_ACCESS_TOKEN_SECRET }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Install dependencies
      run: pnpm install

    - name: Generate tweet content
      id: generate_tweet
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_URL: ${{ github.event.issue.html_url }}
        ISSUE_USER: ${{ github.event.issue.user.login }}
      run: |
        HASH_TAGS="#艦これウィジェット"

        # ツイート本文を生成（280文字制限を考慮）
        BASE_TEXT=$(cat <<EOF
        新しいissueが投稿されました

        #${ISSUE_NUMBER}: ${ISSUE_TITLE}

        ${ISSUE_URL}

        ${HASH_TAGS}
        EOF
        )

        TWEET_TEXT="$BASE_TEXT"

        # 280文字を超える場合はタイトルを切り詰め
        if [ ${#TWEET_TEXT} -gt 280 ]; then
          # URL等の固定部分の長さを計算
          MAX_TITLE_LEN=$((280 - 120))
          ISSUE_TITLE_SHORT=$(echo "$ISSUE_TITLE" | cut -c1-$MAX_TITLE_LEN)
          TWEET_TEXT=$(cat <<EOF
        新しいissueが投稿されました

        #${ISSUE_NUMBER}: ${ISSUE_TITLE_SHORT}...

        ${ISSUE_URL}

        ${HASH_TAGS}
        EOF
          )
        fi

        # GitHub Actionsの出力に設定
        {
          echo "tweet_text<<EOF"
          echo "$TWEET_TEXT"
          echo "EOF"
        } >> "$GITHUB_OUTPUT"

    - name: Post tweet
      run: |
        pnpm exec tsx scripts/post-tweet.ts "${{ steps.generate_tweet.outputs.tweet_text }}"
